---
import { getCollection } from 'astro:content';
import MainLayout from '../layouts/MainLayout.astro';
import Navigation from '../components/Navigation.astro';
import EmailSignup from '../components/EmailSignup.astro';
import Footer from '../components/Footer.astro';

const newsletters = await getCollection('newsletters');
newsletters.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

function formatDate(date: Date) {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}

const uniqueYears = [...new Set(newsletters.map(n => 
  new Date(n.data.publishDate).getFullYear().toString()
))];
uniqueYears.sort((a, b) => Number(b) - Number(a)); 
const years = ['ALL EMAILS', ...uniqueYears];
---

<MainLayout title="Newsletter - Free Weekly Productivity Insights">
  <Navigation slot="header" />
  
  <main class="min-h-screen">
    <!-- Hero Section -->
    <section class="bg-white py-16 md:py-24">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-8">
            Monday Mornings
          </h1>
          
          <div class="space-y-4 text-gray-600 text-lg md:text-xl">
            <p>
              <strong>Monday Mornings</strong> is my weekly email where I share the most valuable insights from the books I read, the podcasts I tune into, and the real-life experiences.
            </p>
            
            <p>
              Think of it as a front-row seat to the best of what I'm learning—delivered to you in real time as I discover it.
            </p>
            
            <p>
              And the best part? It's 100% free—always will be. Plus, you can unsubscribe anytime if it's not for you.
            </p>
            
            <p class="font-medium">
              Don't miss out. <strong>Join now!</strong>
            </p>
            
          </div>
        </div>
      </div>
    </section>

    <!-- Newsletter Archive Section -->
    <section class="bg-gray-50 py-16 md:py-24">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          <!-- Year Filter -->
          <div class="flex flex-wrap gap-4 justify-center mb-16" id="year-filters">
            {years.map(year => (
              <button
                type="button"
                class:list={[
                  'px-6 py-2 rounded-lg border-2 transition-all duration-200 font-medium',  
                
                  'hover:border-blue-500 hover:text-blue-500',
                  year === 'ALL EMAILS' ? 'border-blue-500 text-blue-500 bg-white' : 'border-gray-300 text-gray-700 bg-white'
                ]}
                data-year={year}
              >
                {year}
              </button>
            ))}
          </div>
          
          <!-- Newsletter List -->
          <div class="space-y-12">
            <h2 class="text-3xl md:text-4xl font-bold text-center text-gray-900">
              Read past emails of Monday Mornings
            </h2>
            
            <div class="space-y-6 bg-white rounded-lg p-6 md:p-8 shadow-sm"> <!-- Reduced roundness -->
              {newsletters.map(newsletter => {
                const year = new Date(newsletter.data.publishDate).getFullYear().toString();
                return (
                  <div class="newsletter-item" data-year={year}>
                    <a
                      href={`/newsletter/${newsletter.slug}`}
                      class="block group"
                    >
                      <article class="grid md:grid-cols-[200px,1fr] gap-4 py-4 border-b border-gray-100 last:border-0">
                        <div class="text-blue-500 font-medium">
                          {formatDate(newsletter.data.publishDate)}
                        </div>
                        <h3 class="text-lg text-gray-900 group-hover:text-blue-500 transition-colors">
                          {newsletter.data.title}
                        </h3>
                      </article>
                    </a>
                  </div>
                );
              })}
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Email Signup Section -->
    <section class="bg-white py-16 md:py-24">
      <div class="container mx-auto px-4">
        <div class="max-w-3xl mx-auto">
          <EmailSignup />
        </div>
      </div>
    </section>
  </main>

  <Footer slot="footer" />
</MainLayout>

<style>
  .container {
    max-width: 1200px;
  }
  
  @media (max-width: 768px) {
    .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }

  .newsletter-item {
    opacity: 1;
    transform: translateY(0);
    transition: opacity 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
  }

  .newsletter-item:hover {
    transform: translateY(-10px); /* Add slight upward movement */
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); /* Add shadow on hover */
  }

  .newsletter-item.hidden {
    display: none;
    opacity: 0;
    transform: translateY(10px);
  }
</style>

<script>
  function initializeNewsletterFilters() {
    const filterButtons = document.querySelectorAll('[data-year]');
    const newsletterItems = document.querySelectorAll('.newsletter-item');
    let activeYear = 'ALL EMAILS';

    function updateNewsletter(year: string) {
      newsletterItems.forEach(item => {
        const itemYear = item.getAttribute('data-year');
        if (year === 'ALL EMAILS' || itemYear === year) {
          item.classList.remove('hidden');
        } else {
          item.classList.add('hidden');
        }
      });
    }

    function updateButtons(selectedYear: string) {
      filterButtons.forEach(btn => {
        const isSelected = btn.getAttribute('data-year') === selectedYear;
        btn.classList.toggle('border-blue-500', isSelected);
        btn.classList.toggle('text-blue-500', isSelected);
        btn.classList.toggle('border-gray-300', !isSelected);
        btn.classList.toggle('text-gray-700', !isSelected);
      });
    }

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const year = button.getAttribute('data-year') || 'ALL EMAILS';
        if (activeYear !== year) {
          activeYear = year;
          updateNewsletter(year);
          updateButtons(year);
        }
      });
    });

    // Initialize with ALL EMAILS selected
    updateNewsletter(activeYear);
    updateButtons(activeYear);
  }

  // Initialize when the DOM is ready
  document.addEventListener('DOMContentLoaded', initializeNewsletterFilters);
</script>
