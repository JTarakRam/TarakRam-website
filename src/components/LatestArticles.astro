---
import { getCollection } from 'astro:content';

// Fetch newsletters and sort by date
const newsletters = await getCollection('newsletters');
newsletters.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

// Get only the top 4 most recent newsletters
const latestNewsletters = newsletters.slice(0, 4);

// Fetch blogs and sort by date
const blogs = await getCollection('blogs');
blogs.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

// Get only the top 4 most recent blogs
const latestBlogs = blogs.slice(0, 4);

function formatDate(date: Date) {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}
---

<section class="articles-section">
  <div class="container">
    <h2>Latest Articles</h2>
    <div class="articles-grid">
      <div class="newsletter-column">
        <h3 class="column-title">Latest Newsletters</h3>
        <div class="articles-list">
          {latestNewsletters.map(newsletter => (
            <article class="article-card">
              <span class="category">NEWSLETTER</span>
              <h4>
                <a href={`/newsletter/${newsletter.slug}`}>{newsletter.data.title}</a>
              </h4>
              <time datetime={newsletter.data.publishDate.toISOString()}>
                {formatDate(newsletter.data.publishDate)}
              </time>
            </article>
          ))}
        </div>
      </div>
      <div class="blog-column">
        <h3 class="column-title">Latest Blog Posts</h3>
        <div class="articles-list">
          {latestBlogs.map(blog => (
            <article class="article-card">
              <span class="category">{blog.data.category}</span>
              <h4>
                <a href={`/blogs/${blog.slug}`}>{blog.data.title}</a>
              </h4>
              <time datetime={blog.data.publishDate.toISOString()}>
                {formatDate(blog.data.publishDate)}
              </time>
            </article>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .articles-section {
    padding: 4rem 0;
    background-color: white;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  h2 {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 3rem;
    position: relative;
    color: var(--text-color);
  }

  h2::after {
    content: '';
    position: absolute;
    bottom: -1rem;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 4px;
    background: var(--primary-color);
  }

  .articles-grid {
    display: flex;
    gap: 2rem;
  }

  .newsletter-column,
  .blog-column {
    flex: 1;
  }

  .column-title {
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
    color: var(--text-color);
  }

  .articles-list {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .article-card {
    padding: 1.5rem;
    border-radius: 0.5rem;
    background: white;
    transition: transform 0.2s, box-shadow 0.2s;
    border: 1px solid #eaeaea;
  }

  .article-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .category {
    display: inline-block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #6B7280;
    margin-bottom: 0.5rem;
  }

  h4 {
    font-size: 1.25rem;
    line-height: 1.4;
    margin-bottom: 0.5rem;
  }

  h4 a {
    color: var(--text-color);
    text-decoration: none;
    transition: color 0.2s;
  }

  h4 a:hover {
    color: var(--primary-color);
  }

  time {
    font-size: 0.875rem;
    color: #6B7280;
  }

  @media (max-width: 768px) {
    .articles-grid {
      flex-direction: column;
    }

    h2 {
      font-size: 2rem;
    }

    .column-title {
      font-size: 1.25rem;
    }

    .article-card {
      padding: 1.25rem;
    }

    .article-card:hover {
      transform: none;
    }
  }
</style>

