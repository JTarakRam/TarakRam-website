---
import { fetchYouTubeVideos } from '../utils/youtube';

let podcastEpisodes = [];
try {
  const videos = await fetchYouTubeVideos();
  podcastEpisodes = videos.slice(0, 4).map(video => ({
    title: video.title,
    date: new Date(video.publishedAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),
    thumbnail: video.thumbnail,
    overlayText: video.title.split(' â€“ ')[1] || '',
    link: `https://www.youtube.com/watch?v=${video.videoId}`
  }));
} catch (error) {
  console.error('Error fetching podcast episodes:', error);
}

function formatOverlayText(text) {
  return text.toLowerCase().replace(/[^a-z0-9\s]/g, '').replace(/\s+/g, ' ').trim();
}
---

<section class="podcast-section">
  <div class="container">
    <h2>Deep Dive Podcast</h2>
    <div class="episodes-grid">
      {podcastEpisodes.map(episode => (
        <a href={episode.link} class="episode-card" target="_blank" rel="noopener noreferrer">
          <div class="thumbnail-wrapper">
            <img 
              src={episode.thumbnail} 
              alt={episode.title}
              class="episode-thumbnail"
              width="600"
              height="338"
            />
            <div class="overlay-text">{formatOverlayText(episode.overlayText)}</div>
          </div>
          <div class="episode-info">
            <h3>{episode.title}</h3>
            <time datetime={episode.date}>{episode.date}</time>
          </div>
        </a>
      ))}
    </div>
  </div>
</section>

<style>
  .podcast-section {
    padding: 4rem 1rem;
    background: white;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  h2 {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 3rem;
    position: relative;
    color: #111827;
  }

  h2::after {
    content: '';
    position: absolute;
    bottom: -1rem;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 4px;
    background: var(--primary-color);
  }

  .episodes-grid {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    max-width: 1200px;
    margin: 0 auto;
  }

  .episode-card {
    text-decoration: none;
    color: inherit;
    background: white;
    border-radius: 0.75rem;
    overflow: hidden;
    transition: transform 0.2s, box-shadow 0.2s;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
  }

  .episode-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
                0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .thumbnail-wrapper {
    position: relative;
    aspect-ratio: 16/9;
    overflow: hidden;
    background: #f3f4f6;
  }

  .episode-thumbnail {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.2s;
  }

  .episode-card:hover .episode-thumbnail {
    transform: scale(1.05);
  }

  .overlay-text {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background: rgba(0, 0, 0, 0.75);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .episode-info {
    padding: 1rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  h3 {
    font-size: 1rem;
    font-weight: 600;
    line-height: 1.4;
    color: #111827;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  time {
    color: #6B7280;
    font-size: 0.875rem;
  }

  @media (min-width: 768px) {
    .episodes-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .episodes-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media (max-width: 639px) {
    .podcast-section {
      padding: 3rem 1rem;
    }

    h2 {
      font-size: 2rem;
      margin-bottom: 2rem;
    }

    h2::after {
      width: 40px;
      height: 3px;
    }

    .episodes-grid {
      gap: 1rem;
    }

    .episode-info {
      padding: 0.75rem;
    }

    h3 {
      font-size: 0.875rem;
    }

    time {
      font-size: 0.75rem;
    }
  }
</style>

